#!/usr/bin/bash
# Author: zent
# File: takenotes
# Description: Utility script to take Markdown notes and automatically convert them to PDF with live preview
# Usage:
#	takenotes "name"

setAuthor() {
	echo "Setting your user's real name... "
	echo -n "Full Name: "
	read fullname
	sudo chfn -f "$fullname" "$1"
	echo "Done"
	author=$fullname
}

set -e

depend sudo
depend tex
depend zathura
depend pandoc
depend readgecos

if [ -z "$1" ]; then
	exit -1
fi

author=$(readgecos)
[ -z "$author" ] && setAuthor "$(whoami)"
date=$(date +"%d-%m-%Y %H:%M")
notedir=$(realpath "$HOME/notes")
mkdir -p $notedir
notename="$notedir/$1"
notenamemd="$notename.md"
notenamepdf="$notename.pdf"

if [ ! -f $notenamemd ]; then
	touch $notenamemd
	echo "# $1" > $notenamemd
	echo "> $author, $date" >> $notenamemd
	echo "" >> $notenamemd
	echo "---" >> $notenamemd
	echo "" >> $notenamemd
	echo "" >> $notenamemd
fi
compileCommand="pandoc $notenamemd -o $notenamepdf"
$compileCommand

# Keep $notenamemd as literal variable instead of escaping the $, as the
#`open-in-new-terminal binary will not be able to evaluate it otherwise
# open-in-new-terminal "echo \"Started listening for changes on $notenamemd with compile command $compileCommand\" && inotifywait -e close_write,moved_to,create,modify -m . | while read -r directory events filename; do if [ \"\$filename\" = \"$notenamemd\" ]; then echo -n \"Compiling... \" && $compileCommand && echo \"Done\"; fi; done" & > /dev/null

zathura $notenamepdf & > /dev/null
zathuraPID=$!

nvim -c "autocmd BufWritePost $notenamemd silent !$compileCommand &" $notenamemd

# pkill inotifywait
kill $zathuraPID
